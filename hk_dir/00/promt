#include "main.h"

/**
* _start_prompt - shell entry point
* @name:number of arguements
* @p_count: process count
* Return: 0/errno
*/
int _start_prompt(char *name, int *p_count)
{
	ssize_t nread;
	size_t r_read;
	char *p_string, *first_s, *line = NULL, *line_;
	int child_id = 0, n = 0, b_in = 0;

	while (1)
	{
		if (isatty(STDIN_FILENO))
		{
			if (child_id == 0)
				p_string = "$ ";
			else
				p_string = " ($) ";
			write(1, p_string, strlen(p_string));
		}
		nread = getline(&line, &r_read, stdin);
		if (nread == EOF)
		{
			free(line);
			if (isatty(STDIN_FILENO))
				write(1, NEWL, strlen(NEWL));
			break;
		}
		line[nread - 1] = '\0';
		line_ = line;
		while (*line == ' ')
			line++;
		if (*line == '\0')
			continue;
		first_s = strtok(strdup(line), " ");
		if (strcmp(first_s, "exit") == 0)
		{
			free(first_s);
			arr = tokenizer(line, " ");
			if (create_child(arr,p_count, name, &c_id, &p_ret) == 1)
				continue;
		}
		free(first_s);
		free(line_);
		n = logic(name, line, p_count, &b_in);
	}
	return (n);
}
